{"version":3,"sources":["containers/inWorks/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","title","fontSize","color","margin","action","padding","marginTop","height","input_text","display","width","lineHeight","backgroundColor","border","input_rewrite","text","wordBreak","boxShadow","InWork","name","prev","add_text","React","useState","open","open_dialog","card_name","set_card_name","index","set_index","inWork","add_to_inWork","card","add_card","text_inWork","add_text_inWork","text_rev","add_text_rev","backet","add_to_backet","handleClose","classes","dragStart","e","a","b","s","one","two","concat","setTimeout","filter","i","del_card","className","onDrop","length","onDragOver","preventDefault","dragOver","map","onDragStart","draggable","onClick","c","Button","placeholder","wrap","rows","cols","onChange","target","value","size","new_text","add_new_card","variant","style","role","aria-label","l","to_extract","opacity","Dialog","maxWidth","fullWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","id","float","marginRight","DialogContent","paddingTop","saveTocard","App","text_for_move","add_text_for_move","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3fec6d7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport '../../App.css';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n \r\n  title: {\r\n    fontSize: 15,\r\n    color: '#404B5A',\r\n    margin: 0\r\n  },\r\n  action: {\r\n   padding: '0 5px',\r\n   marginTop: '10px',\r\n   height: 50\r\n  \r\n  },\r\n  input_text: {   \r\n    padding: 10,   \r\n    display: 'block', \r\n    width: '95%', \r\n    fontSize: '15px',\r\n    lineHeight: '18px',\r\n    backgroundColor: '#fff',    \r\n    margin: '10px 0',\r\n    border: 'none'\r\n  },  \r\n  input_rewrite: {   \r\n    padding: 10,\r\n    display: 'block', \r\n    width: '95%',\r\n    color: \"#000\", \r\n    fontSize: 'medium',\r\n    backgroundColor: '#fff',    \r\n    margin: '10px 0',\r\n    border: 'none'\r\n  },  \r\n  text: {     \r\n    padding: 10,\r\n    wordBreak: 'break-all',\r\n    fontSize: 'medium',\r\n    backgroundColor: '#fff',    \r\n    margin: '10px 0 0',\r\n    boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.25)',\r\n  }\r\n});\r\n\r\n\r\nconst InWork = ({name,prev,text, add_text}) => {\r\n  const [open, open_dialog] = React.useState(false);\r\n  const [card_name, set_card_name] = React.useState();\r\n  const [index, set_index] = React.useState();\r\n  \r\n\r\n  const [inWork, add_to_inWork] = React.useState(prev);\r\n  const [card, add_card] = React.useState(true);\r\n  const [text_inWork, add_text_inWork] = React.useState();\r\n  const [text_rev, add_text_rev] = React.useState();\r\n  const [backet, add_to_backet] = React.useState([]);\r\n  \r\n  \r\n\r\n\r\n\r\n  \r\n\r\n    const saveTocard = (a) => {   \r\n        var s = inWork\r\n        .filter((i,index)=>index === a ? i.two = text_rev : i.two)\r\n        .filter((i,index)=>index === a ? i.one = card_name : i.one);       \r\n        return (\r\n          add_to_inWork(s)\r\n        )    \r\n    };\r\n\r\n    const addTextInRev =(value)=>{\r\n        add_text_rev(value)\r\n    };\r\n\r\n    const handleClose =() => {\r\n        open_dialog(false)\r\n    };\r\n\r\n  const write_to_card = (a,b,c) => {\r\n    return (\r\n      open_dialog(true),     \r\n      set_card_name(a),\r\n      add_text_rev(b),\r\n      set_index(c)\r\n    )  \r\n  };\r\n\r\n    const add_new_card = () => {\r\n        var new_text = [{\"one\": text_inWork}];\r\n        return (\r\n        text_inWork ?      \r\n        (add_to_inWork(inWork.concat(new_text)),\r\n        add_card(true))\r\n        :\r\n        add_card(true)\r\n        );\r\n    };\r\n\r\n    const del_card = (a) => {\r\n        let s = inWork.filter((i,index)=>index===a ? \"\":i)\r\n        return (\r\n            add_to_inWork(s)\r\n        )\r\n    }; \r\n\r\n    const classes = useStyles();\r\n\r\n    const to_extract = () => {\r\n        let l = backet.length;\r\n        let s = backet.filter((i,index)=>index+1===l ? \"\":i);\r\n        return (\r\n            add_to_inWork(inWork.concat(backet[l-1])),\r\n            add_to_backet(s)\r\n        )\r\n    };\r\n   \r\n    const dragStart =(e,a,b)=> {\r\n        let s = [{\"one\":a.one,\"two\":a.two}];\r\n        return (\r\n            add_text(text.concat(s)),\r\n            setTimeout(()=>del_card(b),1000)\r\n        )    \r\n    };\r\n    const onDrop = (e) => {       \r\n        return ( \r\n            inWork.filter(i=>i.one===text[0].one).length>0 ? add_to_backet(backet.concat(text)):\"\",            \r\n            add_to_inWork(inWork.concat(text)),\r\n            add_text([])           \r\n        )       \r\n    };\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    return (\r\n    <div className=\"root\"  onDrop={(e)=>onDrop(e)} onDragOver={(e)=>dragOver(e)} >       \r\n      <p className={classes.title}>{name}</p>\r\n      {inWork.map((i,index)=>        \r\n        <p \r\n            onDragStart={(e)=>dragStart(e,i,index)}\r\n            title = \"edit,  movie or delete\"\r\n            draggable = \"true\"\r\n            className={classes.text} \r\n            onClick={()=>write_to_card(i.one,i.two,index)}\r\n            >{i.one}</p>\r\n        \r\n       )}  \r\n    \r\n     \r\n      {card ?        \r\n        <Button  className={classes.action} onClick={()=>add_card(false)}>\r\n          <span className=\"plus\">+</span>\r\n          Добавить еще одну карточку\r\n        </Button>        \r\n        : \r\n        <>\r\n          <textarea placeholder=\"Введите заголовок\" wrap=\"soft\" rows=\"1\" cols=\"30\" className={classes.input_text} onChange={(e)=>add_text_inWork(e.target.value)} />\r\n         \r\n          <Button size=\"medium\" onClick={()=>add_new_card()} variant=\"contained\" color=\"primary\">\r\n            Добавить карточку        \r\n          </Button>\r\n          <Button size=\"medium\" onClick={()=>add_card(true)} style={{margin: 10}}>\r\n            X Отмена      \r\n          </Button>\r\n        </>\r\n      }\r\n        <span \r\n            role=\"img\" \r\n            aria-label=\"wastebasket\" \r\n            className=\"backet\"\r\n            onClick = {()=>backet.length > 0 ? to_extract() : \"\"}\r\n            style={backet.length > 0 ? {opacity: 1} : {opacity:'0.5'}} \r\n            title={backet.length > 0 ? `${backet.length} card` : 'basket empty'}\r\n        \r\n        >\r\n           🗑️\r\n        </span>\r\n        <Dialog\r\n            open={open}\r\n            maxWidth=\"sm\"       \r\n            fullWidth=\"true\"\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\"  style={{backgroundColor:\"#d4d4d4\"}}>\r\n            <p style={{margin: 0,color: '#000',fontSize: 24}}>\r\n                \r\n                <Button onClick={handleClose} color=\"primary\" style={{float:\"right\",marginTop: '-15px',marginRight: '-20px'}}>\r\n                X\r\n                </Button>\r\n                <input className={classes.input_text} value={card_name} onChange={(e)=>set_card_name(e.target.value)} />\r\n            </p>\r\n            </DialogTitle>\r\n            <DialogContent  style={{backgroundColor:\"#d4d4d4\",padding:\"0 24px\"}}>         \r\n            <textarea\r\n                value={text_rev} rows=\"5\" cols=\"20\"\r\n                style={{fontSize: 16,color: '#000'}}\r\n                className={classes.input_rewrite}\r\n                onChange={(e)=>addTextInRev(e.target.value)} \r\n            />\r\n            \r\n            </DialogContent>\r\n            <DialogTitle  style={{backgroundColor:\"#d4d4d4\",paddingTop: 0}}>\r\n            <p>\r\n                <Button\r\n                    onClick={()=>saveTocard(index)}\r\n                    color=\"primary\"\r\n                    variant=\"contained\" \r\n                    style={{float:\"left\"}}\r\n                >Сохранить\r\n                </Button>\r\n            </p>          \r\n            </DialogTitle>\r\n        </Dialog>   \r\n    </div>\r\n\r\n    )\r\n};\r\n\r\nexport default InWork;","import React from 'react';\nimport InWork from './containers/inWorks';\n\n\nfunction App() {\n\n  const one_card = [{\"one\":\"Shop\",\"two\":\"You need going to shop\"}];\n  const two_card = [{\"one\":\"Cinema\",\"two\":\"You need go to the cinema\"}];\n  const three_card = [{\"one\":\"Trip\",\"two\":\"You need going to shop\"}];\n  const [text_for_move, add_text_for_move ] = React.useState([]); \n\n  return <div className=\"main_block\">\n    <InWork  name=\"В работе\" prev={one_card} text={text_for_move} add_text={add_text_for_move}/>\n    <InWork  name=\"На проверке\" prev={two_card} text={text_for_move} add_text={add_text_for_move}/>\n    <InWork  name=\"Завершено\" prev={three_card} text={text_for_move} add_text={add_text_for_move}/>    \n  </div>\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}